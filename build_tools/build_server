#!/bin/bash
set -e
PURE_CRUN="no"
#----------------------------------------------------------------------#
if [ ! -n "${CLOONIX_TREE_ROOT}" ]; then
  echo PLEASE DEFINE CLOONIX_TREE_ROOT
  exit 1
fi
if [ ! -e ${CLOONIX_TREE_ROOT}/cloonix/cloonix_config ]; then
  echo NOT FOUND:
  echo ${CLOONIX_TREE_ROOT}/cloonix/cloonix_config
  exit 1
fi
TMPBUILD=${CLOONIX_TREE_ROOT}/build_tools/tmpbuild_server
COMMON=${TMPBUILD}/cloonix/common
SERVER=${TMPBUILD}/cloonix/server
#----------------------------------------------------------
echo TARGET:
echo $TMPBUILD
#----------------------------------------------------------
rm -rf ${TMPBUILD}
mkdir -p ${TMPBUILD}/targz_store
cp -rf ${CLOONIX_TREE_ROOT}/targz_store/* ${TMPBUILD}/targz_store
cp -r ${CLOONIX_TREE_ROOT}/cloonix ${TMPBUILD}
#----------------------------------------------------------
mv ${TMPBUILD}/cloonix/cloonix_net ${TMPBUILD}
#----------------------------------------------------------
  echo
  echo BUILDING COMMON
  echo
#----------------------------------------------------------
  for i in "lib_io_clownix" \
           "lib_rpc_clownix" \
           "lib_utils" \
           "lib_rpc_doors" \
           "lib_rpc_layout" ; do

    cd ${COMMON}/${i}
    echo
    echo DOING:
    echo ${COMMON}/${i}
    echo
    echo
    ./cmd
  done
#----------------------------------------------------------
  echo
  echo BUILDING SERVER
  echo
#----------------------------------------------------------
  for i in  "xorg" \
            "wireshark" \
            "iproute2" \
            "crun" \
            "dtach" \
            "script_pty" \
            "proxymous" \
            "xwy" \
            "wm2" \
            "ovs" \
            "nginx" \
            "websockify-js" \
            "doorways" \
            "suid_power" \
            "uml_cloonix_switch" \
            "ovs_drv" \
            "ovs_snf" \
            "ovs_nat_main" \
            "ovs_a2b" \
            "ovs_c2c" ; do
    echo
    echo DOING:
    echo ${SERVER}/${i}
    echo
    echo
    cd ${SERVER}/${i}
    ./cmd
  done
  if [ "${PURE_CRUN}" = "no" ]; then
    for i in  "spice_lib_server" \
              "qemu" ; do
      echo DOING:
      echo ${SERVER}/${i}
      cd ${SERVER}/${i}
      ./cmd
    done
  fi
  echo DOING:
  echo ${SERVER}/create_insider_agents_iso
  cd ${SERVER}/create_insider_agents_iso
  ./cmd_mk_iso_x86_64
  ./cmd_mk_iso_i386
#----------------------------------------------------------

