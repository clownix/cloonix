#!/bin/bash
#----------------------------------------------------------------------------#
set -e
FROM_HERE=`pwd`
BUNDLE="/root/cloonix_bundle"
ROOTFS="${BUNDLE}/cloonfs"
PATCHELF="${ROOTFS}/bin/patchelf"
CLOONSRC="${BUNDLE}/cloonix/cloonsrc"
#----------------------------------------------------------------------------#
if [ ! -e ${BUNDLE}/cloonix/cloonix_config ]; then
  echo NOT FOUND:
  echo ${BUNDLE}/cloonix/cloonix_config
  exit 1   
fi  
#----------------------------------------------------------------------------#
#----------------------------------------------------------------------------#
printf "\n\nPACKING ${pretty_name} ${ROOTFS}\n\n"
#----------------------------------------------------------------------------#
for i in  "cloonix_net" \
          "cloonix_cli" \
          "cloonix_gui" \
          "cloonix_ocp" \
          "cloonix_osh" \
          "cloonix_shk" \
          "cloonix_shc" \
          "cloonix_ovs" \
          "cloonix_scp" \
          "cloonix_ssh" \
          "cloonix_dsh" \
          "cloonix_lsh" \
          "cloonix_ice" \
          "cloonix_wsk" ; do
  cp -f ${BUNDLE}/cloonix/${i} ${ROOTFS}/bin
done
#----------------------------------------------------------------------------#
mkdir -p ${ROOTFS}/bin/qemu
#----------------------------------------------------------------------------#
cp -f ${BUNDLE}/cloonix/cloonix_config ${ROOTFS}/etc/cloonix.cfg
#----------------------------------------------------------------------------#
cp -f  ${CLOONSRC}/erase_workdir/cloonix-suid-erase-workdir ${ROOTFS}/bin
cp -f  ${CLOONSRC}/vwifi/cloonix-vwifi-* ${ROOTFS}/bin
cp -f  ${CLOONSRC}/hide_dirs/cloonix-hide-dirs ${ROOTFS}/bin
cp -f  ${CLOONSRC}/cloonix_dropbear/cloonix-dropbear-scp ${ROOTFS}/bin
cp -f  ${CLOONSRC}/cloonix_dropbear/cloonix-dropbear-ssh ${ROOTFS}/bin
cp -f  ${CLOONSRC}/cairo_canvas/cloonix-gui ${ROOTFS}/bin
cp -f  ${CLOONSRC}/xwycli/cloonix-xwycli ${ROOTFS}/bin
cp -f  ${CLOONSRC}/rxvt/urxvt ${ROOTFS}/bin/cloonix-urxvt
cp -f  ${CLOONSRC}/ctrl/cloonix-ctrl ${ROOTFS}/bin
cp -f  ${CLOONSRC}/dtach/cloonix-dtach ${ROOTFS}/bin
cp -f  ${CLOONSRC}/apk_tools/cloonix-apk-static ${ROOTFS}/bin
cp -f  ${CLOONSRC}/ovs/cloonix-vswitch.ovsschema ${ROOTFS}/bin/ovsschema
cp -fr ${CLOONSRC}/insider_agents ${BUNDLE}
cp -fr ${CLOONSRC}/frr/built_frr/etc/frr ${ROOTFS}/etc
cp -fr ${CLOONSRC}/frr/built_frr/bin/*  ${ROOTFS}/bin
cp -fr ${CLOONSRC}/frr/built_frr/sbin/*  ${ROOTFS}/sbin
cp -fr ${CLOONSRC}/frr/built_frr/lib/*  ${ROOTFS}/lib
cp -fr ${CLOONSRC}/frr/built_frr/share/yang  ${ROOTFS}/share
rm -rf ${CLOONSRC}/frr/built_frr
cp -f  ${CLOONSRC}/xwy/cloonix-xwy-srv ${ROOTFS}/bin
cp -f  ${CLOONSRC}/wm2/cloonix-novnc-wm2 ${ROOTFS}/bin
cp -f  ${CLOONSRC}/suid_power/cloonix-suid-power ${ROOTFS}/bin
cp -f  ${CLOONSRC}/doorways/cloonix-doorways ${ROOTFS}/bin
cp -f  ${CLOONSRC}/suid_power/cloonix-suid-power ${ROOTFS}/bin
cp -f  ${CLOONSRC}/uml_cloonix_switch/cloonix-main-server ${ROOTFS}/bin
cp -f  ${CLOONSRC}/ovs/bin/cloonix-ovsdb-server ${ROOTFS}/bin
cp -f  ${CLOONSRC}/ovs/bin/cloonix-ovs-vswitchd ${ROOTFS}/bin
cp -f  ${CLOONSRC}/ovs/bin/cloonix-ovsdb-tool ${ROOTFS}/bin
cp -f  ${CLOONSRC}/ovs/bin/cloonix-ovs-appctl ${ROOTFS}/bin
cp -f  ${CLOONSRC}/ovs/bin/cloonix-ovs-vsctl ${ROOTFS}/bin
cp -f  ${CLOONSRC}/nginx/bin/cloonix-novnc-nginx ${ROOTFS}/bin
cp -f  ${CLOONSRC}/ovs_c2c/cloonix-ovs-c2c ${ROOTFS}/bin
cp -f  ${CLOONSRC}/ovs_a2b/cloonix-ovs-a2b ${ROOTFS}/bin
cp -f  ${CLOONSRC}/ovs_drv/cloonix-ovs-drv ${ROOTFS}/bin
cp -f  ${CLOONSRC}/ovs_nat_main/cloonix-ovs-nat-main ${ROOTFS}/bin
cp -f  ${CLOONSRC}/ovs_snf/cloonix-ovs-snf ${ROOTFS}/bin
cp -f  ${CLOONSRC}/proxymous/cloonix-proxymous ${ROOTFS}/bin
cp -f  ${CLOONSRC}/iproute2/ip ${ROOTFS}/bin
cp -f  ${CLOONSRC}/crun/crun_tainted/crun ${ROOTFS}/bin/cloonix-crun
cp -f  ${CLOONSRC}/xorg/Xvfb ${ROOTFS}/bin/cloonix-novnc-Xvfb
cp -f  ${CLOONSRC}/xorg/Xephyr ${ROOTFS}/bin/cloonix-novnc-xephyr
cp -f  ${CLOONSRC}/wireshark/wireshark ${ROOTFS}/bin/cloonix-wireshark
cp -f  ${CLOONSRC}/wireshark/dumpcap ${ROOTFS}/bin/cloonix-dumpcap
cp -rf ${CLOONSRC}/spice/polkit-1 ${ROOTFS}/bin
cp -f  ${CLOONSRC}/spice/cloonix-spice-client-glib-usb-acl-helper ${ROOTFS}/bin
cp -f  ${CLOONSRC}/spice/cloonix-spicy ${ROOTFS}/bin
cp -f  ${CLOONSRC}/openssh/cloonix-u2i-scp ${ROOTFS}/bin
cp -f  ${CLOONSRC}/openssh/cloonix-u2i-ssh ${ROOTFS}/bin
cp -f  ${CLOONSRC}/qemu/cloonix-qemu-system ${ROOTFS}/bin
cp -f  ${CLOONSRC}/qemu/cloonix-qemu-img ${ROOTFS}/bin
cp -f  ${CLOONSRC}/qemu/pc-bios/* ${ROOTFS}/bin/qemu
#----------------------------------------------------------------------------#
printf "\n\nGET ALL LIBRARIES ${ROOTFS}\n\n"
#----------------------------------------------------------------------------#
cd ${BUNDLE}
./copy_libs ${ROOTFS}
#----------------------------------------------------------------------------#
printf "\n\nPATCHELF ${ROOTFS}\n\n"
#----------------------------------------------------------------------------#
LDLINUX="/usr/libexec/cloonix/cloonfs/lib64/ld-linux-x86-64.so.2"
RPATH_LIB="/usr/libexec/cloonix/cloonfs/lib"
RPATH_LIB="${RPATH_LIB}:/usr/libexec/cloonix/cloonfs/lib/x86_64-linux-gnu"
set +e
for j in "bin" \
         "sbin" \
         "lib" \
         "lib/frr" \
         "lib/frr/modules" \
         "lib/systemd" \
         "lib/x86_64-linux-gnu" \
         "lib/x86_64-linux-gnu/rsyslog" \
         "lib/x86_64-linux-gnu/systemd" \
         "lib/x86_64-linux-gnu/qt6/plugins/platforms" \
         "lib/x86_64-linux-gnu/gconv" \
         "lib/x86_64-linux-gnu/gstreamer-1.0" \
         "lib/x86_64-linux-gnu/gstreamer1.0" \
         "lib/x86_64-linux-gnu/gstreamer1.0/gstreamer-1.0" \
         "lib/x86_64-linux-gnu/pipewire-0.3" ; do 

  if [ -e ${ROOTFS}/${j} ]; then
    for i in `find ${ROOTFS}/${j} -maxdepth 1 -type f` ; do
      ${PATCHELF} --force-rpath --set-rpath ${RPATH_LIB} ${i} 2>/dev/null
      ${PATCHELF} --set-interpreter ${LDLINUX} ${i} 2>/dev/null
    done
  fi
done
#----------------------------------------------------------------------------#
mkdir -p ${BUNDLE}/startup_bin
for i in "bash" "sleep" "mkdir" "xauth" "cat" \
         "ln" "mount" "echo" "rm" "touch" ; do
  cp -f ${ROOTFS}/bin/${i} ${BUNDLE}/startup_bin
done     
#----------------------------------------------------------------------------#
echo PACK DONE OK TO END
#----------------------------------------------------------------------------#

