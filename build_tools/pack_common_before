#!/bin/bash
PURE_CRUN="no"
#----------------------------------------------------------------------#
if [ ${#} = 1 ]; then
  if [ "$1" = "i386" ]; then
    ARCH="i386"
  else
    if [ "$1" = "amd64" ]; then
      ARCH="amd64"
    else
      echo ERROR $0 param must be i386 or amd64
      exit
    fi
  fi
else
  echo ERROR $0 param must be i386, or amd64
  exit
fi
#----------------------------------------------------------------------#
if [ ! -n "${CLOONIX_TREE_ROOT}" ]; then
  echo PLEASE DEFINE CLOONIX_TREE_ROOT
  exit 1
fi
if [ ! -e ${CLOONIX_TREE_ROOT}/cloonix/cloonix_config ]; then
  echo NOT FOUND:
  echo ${CLOONIX_TREE_ROOT}/cloonix/cloonix_config
  exit 1
fi
TARGZ_STORE="${CLOONIX_TREE_ROOT}/targz_store"
COMMON="${CLOONIX_TREE_ROOT}/build_tools/common"
PATCHELF="/tmp/patchelf/src/patchelf"
TMPBUILD="${CLOONIX_TREE_ROOT}/build_tools/tmpbuild_client"
pretty_name=$(cat /etc/os-release |grep PRETTY_NAME)
pretty_name=${pretty_name#*\"}
pretty_name=${pretty_name%% *}
case "$pretty_name" in
  "Debian")
  ;;
  *)
  printf "\n\tERROR: Your distribution: $pretty_name is not supported"
  exit
  ;;
esac

if [ "${ARCH}" = "i386" ]; then
  mkdir -p ${COMMON}/lib32
  mkdir -p ${COMMON}/lib/i386-linux-gnu
else
  mkdir -p ${COMMON}/lib64
  mkdir -p ${COMMON}/lib/x86_64-linux-gnu
fi

for i in "lib/locale" "etc" "share/fonts/truetype" \
         "share/terminfo" "share/mime" "share/misc" \
         "share/dconf" "share/locale" "share/i18n/charmaps" \
         "share/i18n/locales" "share/glib-2.0/schemas" \
         "share/X11/locale" "lib/x86_64-linux-gnu/rsyslog" \
         "share/vim/vim91/syntax" \
         "lib/x86_64-linux-gnu/qt6/plugins" ; do
  mkdir -p ${COMMON}/${i}
done

cp -rf ${TMPBUILD}/cloonix/client/* ${COMMON}

#----------------------------------------------------------
FROM_HERE=`pwd`
tar --directory=/tmp -xf ${TARGZ_STORE}/patchelf_*.tar.gz
cd /tmp/patchelf
make
cd $FROM_HERE
#----------------------------------------------------------
cp -Lrf /etc/fonts ${COMMON}/etc

cat > ${COMMON}/etc/passwd << "EOF"
root:x:0:0:root:/root:/bin/bash
EOF
cat > ${COMMON}/etc/group << "EOF"
root:x:0:
audio:x:29:pulse
EOF
cat > ${COMMON}/etc/rsyslog.conf << "EOF"
module(load="imuxsock") # provides support for local system logging
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
$FileOwner root
$FileGroup root
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022
$WorkDirectory /var/spool/rsyslog
*.*;auth,authpriv.none          -/var/log/syslog
auth,authpriv.*                 /var/log/auth.log
cron.*                          -/var/log/cron.log
EOF
rm -f ${COMMON}/etc/fonts/fonts.conf
cat > ${COMMON}/etc/fonts/fonts.conf << EOF
<?xml version="1.0"?>
<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
<fontconfig>
    <dir>/usr/libexec/cloonix/common/share</dir>
    <cachedir>/var/lib/cloonix/cache/fontconfig</cachedir>
    <cachedir prefix="xdg">fontconfig</cachedir>
</fontconfig>
EOF
cat > ${COMMON}/etc/locale.gen << EOF
en_US.UTF-8 UTF-8
EOF
cat > ${COMMON}/etc/locale.conf << EOF
LANG=C
EOF
cat > ${COMMON}/etc/hosts << EOF
127.0.0.1   localhost
EOF
#----------------------------------------------------------
cp -v /usr/lib/file/magic.mgc ${COMMON}/share/misc
cp -v /usr/share/vim/vim91/filetype.vim ${COMMON}/share/vim/vim91
cp -v /usr/share/vim/vim91/syntax/syntax.vim ${COMMON}/share/vim/vim91/syntax/
cp -v /usr/share/vim/vim91/defaults.vim ${COMMON}/share/vim/vim91
sed -i "s/'mouse'/'totomouse'/" ${COMMON}/share/vim/vim91/defaults.vim
#----------------------------------------------------------
cp -Lrf /usr/lib/locale/* ${COMMON}/lib/locale
#----------------------------------------------------------
cp -Lrf /usr/share/terminfo/l ${COMMON}/share/terminfo
cp -Lrf /usr/share/terminfo/t ${COMMON}/share/terminfo
cp -Lrf /usr/share/terminfo/x ${COMMON}/share/terminfo
cp -Lrf /usr/share/fonts/truetype/dejavu ${COMMON}/share/fonts/truetype
cp -Lrf /usr/share/fontconfig ${COMMON}/share
cp -Lrf /usr/share/nodejs ${COMMON}/share
cp -Lrf /usr/share/node_modules ${COMMON}/share
cp -Lrf /usr/lib/x86_64-linux-gnu/nodejs ${COMMON}/lib/x86_64-linux-gnu
#----------------------------------------------------------
cp -Lrf /usr/lib/python3.12 ${COMMON}/lib
cp -Lrf /usr/share/gdb ${COMMON}/share
cp /usr/bin/python3 ${COMMON}/python
cp /usr/bin/gdb ${COMMON}
#----------------------------------------------------------
cp -Lrf /usr/share/X11/locale/en_US.UTF-8 ${COMMON}/share/X11/locale
cp -Lrf /usr/share/X11/locale/C ${COMMON}/share/X11/locale
cp -Lrf /usr/share/X11/locale/locale.dir ${COMMON}/share/X11/locale
cp -Lrf /usr/share/X11/xkb ${COMMON}/share/X11
cp -f   /usr/share/X11/rgb.txt ${COMMON}/share/X11
#----------------------------------------------------------
cp /usr/lib/x86_64-linux-gnu/rsyslog/lmnet.so    ${COMMON}/lib/x86_64-linux-gnu/rsyslog
cp /usr/lib/x86_64-linux-gnu/rsyslog/imklog.so   ${COMMON}/lib/x86_64-linux-gnu/rsyslog
cp /usr/lib/x86_64-linux-gnu/rsyslog/imuxsock.so ${COMMON}/lib/x86_64-linux-gnu/rsyslog
#----------------------------------------------------------
cp -rn /usr/lib/x86_64-linux-gnu/qt6/plugins/platforms ${COMMON}/lib/x86_64-linux-gnu/qt6/plugins
#----------------------------------------------------------
cd $FROM_HERE

cp -Lrf /usr/share/themes ${COMMON}/share
cp -f /usr/share/mime/mime.cache ${COMMON}/share/mime

for i in "en_GB" "en" "locale.alias" ; do
  cp -Lrf /usr/share/locale/${i} ${COMMON}/share/locale
done

cp -f /usr/share/i18n/charmaps/UTF-8.gz ${COMMON}/share/i18n/charmaps
for i in en_US en_GB i18n i18n_ctype iso14651_t1 iso14651_t1_common \
         translit_* ; do
  cp -f /usr/share/i18n/locales/${i} ${COMMON}/share/i18n/locales
done
cp -f /usr/share/glib-2.0/schemas/gschemas.compiled ${COMMON}/share/glib-2.0/schemas
cd ${COMMON}/share/i18n/charmaps
gunzip -f UTF-8.gz
cd $FROM_HERE
#----------------------------------------------------------
tar --directory=${COMMON}/share -xf ${TARGZ_STORE}/noVNC_*.tar.gz
#----------------------------------------------------------
if [ "${ARCH}" = "i386" ]; then
  cp -f /lib/ld-linux.so.2 ${COMMON}/lib32
else
  cp -f /lib64/ld-linux-x86-64.so.2 ${COMMON}/lib64
fi
cp -f ${CLOONIX_TREE_ROOT}/cloonix/cloonix_config ${COMMON}/etc/cloonix.cfg
#----------------------------------------------------------
cp -f /bin/bash ${COMMON}
#----------------------------------------------------------
for i in "su" "awk" "cat" "chmod" "chown" "cp" "echo" "ps" "mkdir" \
         "env" "grep" "egrep" "kill" "ldd" "strace" "ls" "netstat" \
         "locale" "localedef" "localectl" "xauth" "ln" "mv" "rm" \
         "xeyes" "xclock" "diff" "unzip" "unshare" "tail" "which" \
         "touch" "vim" "sleep" "find" "grep" "file" "false" "id" \
         "node" "watch" "chacl" "getfacl" "setfacl" "sed" ; do
  cp -f /usr/bin/${i} ${COMMON}
done
for i in "useradd" "rsyslogd" ; do
  cp -f /usr/sbin/${i} ${COMMON}
done
cd ${COMMON}
ln -s bash sh
cd $FROM_HERE

sed -i s"%/bin/bash%/usr/libexec/cloonix/common/bash%" ${COMMON}/ldd
#----------------------------------------------------------
for i in "ifconfig" "locale-gen" ; do
  cp -f /usr/sbin/${i} ${COMMON}
done
#----------------------------------------------------------
cd ${COMMON}
sed -i s"%/bin/sh%/usr/libexec/cloonix/common/bash%" locale-gen
sed -i s"%localedef%/usr/libexec/cloonix/common/localedef%" locale-gen
sed -i s'%LOCALEGEN=\(.*\)%LOCALEGEN=/usr/libexec/cloonix/common/etc/locale.gen%' locale-gen
#----------------------------------------------------------
mkdir -p ${COMMON}/usr_bin
for i in  "cloonix_cli" \
          "cloonix_gui" \
          "cloonix_ocp" \
          "cloonix_osh" \
          "cloonix_shk" \
          "cloonix_shc" \
          "cloonix_ovs" \
          "cloonix_scp" \
          "cloonix_ssh" \
          "cloonix_dsh" \
          "cloonix_wsk" ; do
  cp -f ${CLOONIX_TREE_ROOT}/cloonix/${i} ${COMMON}/usr_bin
done

#----------------------------------------------------------
if [ "${PURE_CRUN}" = "no" ]; then
#----------------------------------------------------------

   cp -Lrf /usr/share/gstreamer-1.0 ${COMMON}/share
  if [ "${ARCH}" = "i386" ]; then
    SRCD="/usr/lib/i386-linux-gnu"
    DSTD="${COMMON}/lib/i386-linux-gnu"
  else
    SRCD="/usr/lib/x86_64-linux-gnu"
    DSTD="${COMMON}/lib/x86_64-linux-gnu"
  fi
  for i in "gstreamer1.0" "pipewire-0.3" ; do
    cp -rf ${SRCD}/${i} ${DSTD}
  done
  
  mkdir -p ${DSTD}/gstreamer-1.0
  for i in "libgstpulseaudio.so" \
           "libgstautodetect.so" \
           "libgstaudioresample.so" \
           "libgstaudioconvert.so" \
           "libgstcoreelements.so" \
           "libgstapp.so" ; do
    cp -rf ${SRCD}/gstreamer-1.0/${i} ${DSTD}/gstreamer-1.0
  done
  mkdir -p ${DSTD}/gconv
  cp -f ${SRCD}/gconv/gconv-modules.cache ${DSTD}/gconv


  cp -f ${CLOONIX_TREE_ROOT}/cloonix/cloonix_ice ${COMMON}/usr_bin
  rm -rf ${COMMON}/spice_lib_client
  cp -f ${COMMON}/spice/cloonix-spice-client-glib-usb-acl-helper ${COMMON}
  cp -rf ${COMMON}/spice/polkit-1 ${COMMON}
  cp -f ${COMMON}/spice/cloonix-spicy ${COMMON}
  rm -rf ${COMMON}/spice

#----------------------------------------------------------
fi #PURE_CRUN
#----------------------------------------------------------
#----------------------------------------------------------
rm -rf ${COMMON}/lib_client
#----------------------------------------------------------
cp -f  ${COMMON}/hide_dirs/cloonix-hide-dirs ${COMMON}
rm -rf ${COMMON}/hide_dirs
#----------------------------------------------------------
cp -f  ${COMMON}/agent_dropbear/cloonix-dropbear-scp ${COMMON}
cp -f  ${COMMON}/agent_dropbear/cloonix-dropbear-ssh ${COMMON}
rm -rf ${COMMON}/agent_dropbear
#----------------------------------------------------------
cp -f ${COMMON}/cairo_canvas/cloonix-gui ${COMMON}
rm -rf ${COMMON}/cairo_canvas
#----------------------------------------------------------
cp -f ${COMMON}/xwycli/cloonix-xwycli ${COMMON}
rm -rf ${COMMON}/xwycli
#----------------------------------------------------------
cp -f ${COMMON}/rxvt/urxvt ${COMMON}/cloonix-urxvt
rm -rf ${COMMON}/rxvt
#----------------------------------------------------------
cp -f ${COMMON}/ctrl/cloonix-ctrl ${COMMON}
rm -rf ${COMMON}/ctrl
#----------------------------------------------------------
cp -f ${COMMON}/openssh/cloonix-u2i-scp ${COMMON}
cp -f ${COMMON}/openssh/cloonix-u2i-ssh ${COMMON}
rm -rf ${COMMON}/openssh
#----------------------------------------------------------
cp -f ${PATCHELF} ${COMMON}/cloonix-patchelf
strip ${COMMON}/cloonix-patchelf
#----------------------------------------------------------
echo DONE pack_common_before
#----------------------------------------------------------
