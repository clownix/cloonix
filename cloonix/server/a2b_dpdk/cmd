#!/bin/bash
HERE=`pwd`
DPDK=../dpdk
CLOONIX_COMMON=../../common
NINJA=${HERE}/${CLOONIX_COMMON}/meson_ninja
IO_CLOWNIX=${CLOONIX_COMMON}/lib_io_clownix
GLOB_INCLUDE=${CLOONIX_COMMON}/glob_include
RPC_CLOWNIX=${CLOONIX_COMMON}/lib_rpc_clownix/
RPCT=${CLOONIX_COMMON}/lib_rpct



./allclean

if [ ! -f ${IO_CLOWNIX}/libio_clownix.a ]; then
  cd ${IO_CLOWNIX}
  make
fi
if [ ! -f ${RPC_CLOWNIX}/librpc_clownix.a ]; then
  cd ${RPC_CLOWNIX}
  ./cmd
fi
if [ ! -f ${RPCT}/librpct.a ]; then
  cd ${RPCT}
  make
fi
if [ ! -f ${NINJA}/ninja/ninja ]; then
  cd ${NINJA}
  ./cmd
  cd ${HERE}
fi
if [ ! -f ${DPDK}/bin/dpdk-testpmd ]; then
  cd ${DPDK}
  ./cmd
  cd ${HERE}
fi

export PKG_CONFIG_PATH=${DPDK}/lib/pkgconfig
export PATH=${NINJA}/ninja:${NINJA}/meson:$PATH

cat > meson.build << EOF
project('cloonix_a2b_dpdk', 'c')

cflags = ['-march=native']
cflags += ['-fPIC']
cflags += ['-g']
cflags += ['-DALLOW_EXPERIMENTAL_API']

incdir = include_directories('${DPDK}/include',
                             '${IO_CLOWNIX}/include',
                             '${RPC_CLOWNIX}/include',
                             '${GLOB_INCLUDE}')

crypto = dependency('libcrypto')
dpdk = dependency('libdpdk')
cmplr = meson.get_compiler('c')
io_clownix = cmplr.find_library('libio_clownix', dirs : '${HERE}/${IO_CLOWNIX}')
rpct = cmplr.find_library('librpct', dirs : '${HERE}/${RPCT}')

sources = files('src/a2b_dpdk.c',
                'src/vhost_client.c',
                'src/sched.c',
                'src/circle.c',
                'src/stub.c')

executable('cloonix_a2b_dpdk', sources, include_directories : incdir,
            dependencies : [dpdk,io_clownix,rpct,crypto],
            c_args: cflags,
            install_rpath : '/usr/local/bin/cloonix/server/dpdk/lib',
            install : true)

EOF

meson.py build
cd build
ninja
DESTDIR=${HERE} ninja install
cd ${HERE}
cp -vf usr/local/bin/cloonix_a2b_dpdk ${DPDK}/bin
