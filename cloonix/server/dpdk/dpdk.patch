diff -Naur dpdk/drivers/meson.build dpdk_tainted/drivers/meson.build
--- dpdk/drivers/meson.build	2020-07-22 22:16:18.000000000 +0200
+++ dpdk_tainted/drivers/meson.build	2020-07-22 22:18:01.374171699 +0200
@@ -129,6 +129,7 @@
 				objects: objs,
 				include_directories: includes,
 				dependencies: static_deps,
+                                install_rpath : '/usr/local/bin/cloonix/server/dpdk/lib',
 				c_args: cflags,
 				install: true)
 
@@ -180,6 +181,7 @@
 				version: abi_version,
 				soversion: so_version,
 				install: true,
+                                install_rpath : '/usr/local/bin/cloonix/server/dpdk/lib',
 				install_dir: driver_install_path)
 
 			# create a dependency object and add it to the global dictionary so
diff -Naur dpdk/drivers/net/virtio/virtio_ethdev.c dpdk_tainted/drivers/net/virtio/virtio_ethdev.c
--- dpdk/drivers/net/virtio/virtio_ethdev.c	2020-07-22 22:16:18.000000000 +0200
+++ dpdk_tainted/drivers/net/virtio/virtio_ethdev.c	2020-07-22 22:18:01.374171699 +0200
@@ -1485,6 +1485,11 @@
 	isr = vtpci_isr(hw);
 	PMD_DRV_LOG(INFO, "interrupt status = %#x", isr);
 
+	if (hw->started == false) {
+	    PMD_DRV_LOG(ERR, "cloonix: hw->started FALSE");
+            return;
+        }
+
 	if (virtio_intr_unmask(dev) < 0)
 		PMD_DRV_LOG(ERR, "interrupt enable failed");
 
@@ -2211,20 +2216,6 @@
 	PMD_INIT_LOG(DEBUG, "configure");
 	req_features = VIRTIO_PMD_DEFAULT_GUEST_FEATURES;
 
-	if (rxmode->mq_mode != ETH_MQ_RX_NONE) {
-		PMD_DRV_LOG(ERR,
-			"Unsupported Rx multi queue mode %d",
-			rxmode->mq_mode);
-		return -EINVAL;
-	}
-
-	if (txmode->mq_mode != ETH_MQ_TX_NONE) {
-		PMD_DRV_LOG(ERR,
-			"Unsupported Tx multi queue mode %d",
-			txmode->mq_mode);
-		return -EINVAL;
-	}
-
 	if (dev->data->dev_conf.intr_conf.rxq) {
 		ret = virtio_init_device(dev, hw->req_guest_features);
 		if (ret < 0)
diff -Naur dpdk/drivers/net/virtio/virtio_user_ethdev.c dpdk_tainted/drivers/net/virtio/virtio_user_ethdev.c
--- dpdk/drivers/net/virtio/virtio_user_ethdev.c	2020-07-22 22:16:18.000000000 +0200
+++ dpdk_tainted/drivers/net/virtio/virtio_user_ethdev.c	2020-07-22 22:18:01.374171699 +0200
@@ -127,6 +127,7 @@
 			return -1;
 		}
 	}
+/*
 	if (eth_dev->data->dev_flags & RTE_ETH_DEV_INTR_LSC) {
 		if (rte_intr_disable(eth_dev->intr_handle) < 0) {
 			PMD_DRV_LOG(ERR, "interrupt disable failed");
@@ -144,6 +145,7 @@
 			return -1;
 		}
 	}
+*/
 	PMD_INIT_LOG(NOTICE, "server mode virtio-user reconnection succeeds!");
 	return 0;
 }
diff -Naur dpdk/lib/librte_eal/common/eal_common_options.c dpdk_tainted/lib/librte_eal/common/eal_common_options.c
--- dpdk/lib/librte_eal/common/eal_common_options.c	2020-07-22 22:16:18.000000000 +0200
+++ dpdk_tainted/lib/librte_eal/common/eal_common_options.c	2020-07-22 22:18:01.374171699 +0200
@@ -121,7 +121,9 @@
 
 #ifndef RTE_EXEC_ENV_WINDOWS
 /* Default path of external loadable drivers */
-static const char *default_solib_dir = RTE_EAL_PMD_PATH;
+//static const char *default_solib_dir = RTE_EAL_PMD_PATH;
+static const char *default_solib_dir = "/usr/local/bin/cloonix/server/dpdk/lib";
+
 #endif
 
 /*
diff -Naur dpdk/lib/librte_eal/linux/eal.c dpdk_tainted/lib/librte_eal/linux/eal.c
--- dpdk/lib/librte_eal/linux/eal.c	2020-07-22 22:16:18.000000000 +0200
+++ dpdk_tainted/lib/librte_eal/linux/eal.c	2020-07-22 22:18:01.374171699 +0200
@@ -98,13 +98,13 @@
 	char tmp[PATH_MAX];
 	int ret;
 
-	if (getuid() != 0) {
+//cloonix	if (getuid() != 0) {
 		/* try XDG path first, fall back to /tmp */
 		if (xdg_runtime_dir != NULL)
 			directory = xdg_runtime_dir;
 		else
 			directory = fallback;
-	}
+//cloonix	}
 	/* create DPDK subdirectory under runtime dir */
 	ret = snprintf(tmp, sizeof(tmp), "%s/dpdk", directory);
 	if (ret < 0 || ret == sizeof(tmp)) {
diff -Naur dpdk/lib/meson.build dpdk_tainted/lib/meson.build
--- dpdk/lib/meson.build	2020-07-22 22:16:18.000000000 +0200
+++ dpdk_tainted/lib/meson.build	2020-07-22 22:18:01.374171699 +0200
@@ -123,6 +123,7 @@
 					c_args: cflags,
 					dependencies: static_deps,
 					include_directories: includes,
+                                        install_rpath : '/usr/local/bin/cloonix/server/dpdk/lib',
 					install: true)
 			static_dep = declare_dependency(
 					include_directories: includes,
@@ -185,6 +186,7 @@
 					link_depends: lk_deps,
 					version: abi_version,
 					soversion: so_version,
+                                        install_rpath : '/usr/local/bin/cloonix/server/dpdk/lib',
 					install: true)
 			shared_dep = declare_dependency(link_with: shared_lib,
 					include_directories: includes,
