diff -Naur ovs/lib/dpif-netdev.h ovs_tainted/lib/dpif-netdev.h
--- ovs/lib/dpif-netdev.h	2020-06-15 15:39:54.000000000 +0200
+++ ovs_tainted/lib/dpif-netdev.h	2020-06-16 00:13:38.134081231 +0200
@@ -35,7 +35,7 @@
 
 bool dpif_is_netdev(const struct dpif *);
 
-#define NR_QUEUE   1
+#define NR_QUEUE   4
 #define NR_PMD_THREADS 1
 
 #ifdef  __cplusplus
diff -Naur ovs/lib/poll-loop.c ovs_tainted/lib/poll-loop.c
--- ovs/lib/poll-loop.c	2020-06-15 15:39:54.000000000 +0200
+++ ovs_tainted/lib/poll-loop.c	2020-06-16 00:13:38.134081231 +0200
@@ -64,7 +64,12 @@
     struct poll_node *node;
 
     /* Both 'fd' and 'wevent' cannot be set. */
-    ovs_assert(!fd != !wevent);
+    //ovs_assert(!fd != !wevent);
+    if ((fd != 0) && (wevent != 0))
+      {
+      VLOG_ERR("ovs_assert poll_create_node");
+      return;
+      }
 
     HMAP_FOR_EACH_WITH_HASH (node, hmap_node,
                              hash_2words(fd, (uint32_t)wevent),
@@ -108,8 +113,12 @@
     COVERAGE_INC(poll_create_node);
 
     /* Both 'fd' and 'wevent' cannot be set. */
-    ovs_assert(!fd != !wevent);
-
+    // ovs_assert(!fd != !wevent);
+    if ((fd != 0) && (wevent != 0))
+      {
+      VLOG_ERR("ovs_assert poll_create_node");
+      return;
+      }
     /* Check for duplicate.  If found, "or" the events. */
     node = find_poll_node(loop, fd, wevent);
     if (node) {
diff -Naur ovs/ofproto/ofproto-dpif.c ovs_tainted/ofproto/ofproto-dpif.c
--- ovs/ofproto/ofproto-dpif.c	2020-06-15 15:39:54.000000000 +0200
+++ ovs_tainted/ofproto/ofproto-dpif.c	2020-06-16 00:16:11.282811590 +0200
@@ -748,7 +748,7 @@
         return 0;
     }
 
-    backer_name = xasprintf("ovs-%s", type);
+    backer_name = xasprintf("%s-%s", getenv("CLOONIX_NET"), type);
 
     /* Remove any existing datapaths, since we assume we're the only
      * userspace controlling the datapath. */
diff -Naur ovs/ofproto/ofproto-dpif-xlate.c ovs_tainted/ofproto/ofproto-dpif-xlate.c
--- ovs/ofproto/ofproto-dpif-xlate.c	2020-06-15 15:39:54.000000000 +0200
+++ ovs_tainted/ofproto/ofproto-dpif-xlate.c	2020-06-16 00:13:38.134081231 +0200
@@ -4144,6 +4144,12 @@
            xlate_report_error(ctx, "Cannot truncate output to patch port");
        }
        patch_port_output(ctx, xport, xport->peer);
+
+    if (mbridge_has_mirrors(ctx->xbridge->mbridge) && xport->xbundle) {
+        mirror_packet(ctx, xport->xbundle,
+                      xbundle_mirror_dst(xport->xbundle->xbridge,
+                                         xport->xbundle));
+    }
        return;
     }
 
