#!/bin/bash
HERE=`pwd`
CLOONIX_COMMON=../../common
NINJA=${HERE}/${CLOONIX_COMMON}/meson_ninja
IO_CLOWNIX=${CLOONIX_COMMON}/lib_io_clownix
GLOB_INCLUDE=${CLOONIX_COMMON}/glob_include
RPC_CLOWNIX=${CLOONIX_COMMON}/lib_rpc_clownix/

./allclean

if [ ! -f ${IO_CLOWNIX}/libio_clownix.a ]; then
  cd ${IO_CLOWNIX}
  make
fi
if [ ! -f ${RPC_CLOWNIX}/librpc_clownix.a ]; then
  cd ${RPC_CLOWNIX}
  ./cmd
fi
if [ ! -f ${NINJA}/ninja/ninja ]; then
  cd ${NINJA}
  ./cmd
  cd ${HERE}
fi

export PATH=${NINJA}/ninja:${NINJA}/meson:$PATH

cat > meson.build << EOF
project('cloonix_ovs_snf', 'c')

cflags = ['-march=native']
cflags += ['-g']
cflags += ['-fPIC']
cflags += ['-DALLOW_EXPERIMENTAL_API']

incdir = include_directories('${IO_CLOWNIX}/include',
                             '${RPC_CLOWNIX}/include',
                             '${GLOB_INCLUDE}')

crypto = dependency('libcrypto')
cmplr = meson.get_compiler('c')
io_clownix = cmplr.find_library('libio_clownix', dirs : '${HERE}/${IO_CLOWNIX}')

sources = files('src/ovs_snf.c','src/tun_tap.c','src/stub.c',
                'src/eventfull.c','src/pcap_record.c',
                'src/inotify_trigger.c')

executable('cloonix_ovs_snf', sources, include_directories : incdir,
            dependencies : [io_clownix,crypto],
            c_args: cflags,
            install : true)

EOF

meson.py build
cd build
ninja
DESTDIR=${HERE} ninja install
cd ${HERE}
cp -vf build/cloonix_ovs_snf ${HERE}
