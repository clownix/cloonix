diff -Naur qemu_vip/configure tainted_qemu/configure
--- qemu_vip/configure	2022-10-20 20:36:12.000000000 +0200
+++ tainted_qemu/configure	2022-10-23 00:22:54.782828685 +0200
@@ -2227,6 +2227,20 @@
   QEMU_LDFLAGS="-fsanitize=undefined $QEMU_LDFLAGS"
 fi
 
+ ##########################################
+# spice
+if test "$spice" != "no" ; then
+  spice_cflags=$($pkg_config --cflags spice-protocol spice-server 2>/dev/null)
+  spice_libs=$($pkg_config --libs spice-protocol spice-server 2>/dev/null)
+  spice="yes"
+  libs_softmmu="$libs_softmmu $spice_libs"
+  QEMU_CFLAGS="$QEMU_CFLAGS $spice_cflags"
+  spice_protocol_version=$($pkg_config --modversion spice-protocol)
+  spice_server_version=$($pkg_config --modversion spice-server)
+  libs_softmmu="$libs_softmmu -ljpeg -lsasl2 -lopus"
+  openssl_libs=$($pkg_config --libs openssl 2>/dev/null)
+  libs_softmmu="$libs_softmmu $openssl_libs"
+fi
 ##########################################
 # Guest agent Windows MSI package
 
diff -Naur qemu_vip/include/hw/virtio/virtio.h tainted_qemu/include/hw/virtio/virtio.h
--- qemu_vip/include/hw/virtio/virtio.h	2022-10-20 20:36:12.000000000 +0200
+++ tainted_qemu/include/hw/virtio/virtio.h	2022-10-23 00:22:54.782828685 +0200
@@ -343,6 +343,7 @@
 VirtQueue *virtio_vector_first_queue(VirtIODevice *vdev, uint16_t vector);
 VirtQueue *virtio_vector_next_queue(VirtQueue *vq);
 
+
 static inline void virtio_add_feature(uint64_t *features, unsigned int fbit)
 {
     assert(fbit < 64);
diff -Naur qemu_vip/include/hw/virtio/virtio-net.h tainted_qemu/include/hw/virtio/virtio-net.h
--- qemu_vip/include/hw/virtio/virtio-net.h	2022-10-20 20:36:12.000000000 +0200
+++ tainted_qemu/include/hw/virtio/virtio-net.h	2022-10-23 00:22:54.782828685 +0200
@@ -26,6 +26,7 @@
 #define TYPE_VIRTIO_NET "virtio-net-device"
 OBJECT_DECLARE_SIMPLE_TYPE(VirtIONet, VIRTIO_NET)
 
+
 #define TX_TIMER_INTERVAL 150000 /* 150 us */
 
 /* Limit the number of packets that can be sent via a single flush
@@ -38,6 +39,8 @@
 /* Maximum VIRTIO_NET_CTRL_MAC_TABLE_SET unicast + multicast entries. */
 #define MAC_TABLE_ENTRIES    64
 
+#define CLOONIX_CIRC_ELEM 0x1FF
+
 typedef struct virtio_net_conf
 {
     uint32_t txtimer;
@@ -145,15 +148,28 @@
     uint16_t default_queue;
 } VirtioNetRssData;
 
+typedef struct t_async_rx_el
+{
+  uint32_t volatile pool_put_lock;
+  int pool_put;
+  int pool_get;
+  int pool_qty;
+  VirtQueueElement *elem[CLOONIX_CIRC_ELEM + 1];
+} t_async_rx_el;
+
+
 typedef struct VirtIONetQueue {
     VirtQueue *rx_vq;
     VirtQueue *tx_vq;
     QEMUTimer *tx_timer;
+    QEMUTimer *rx_timer;
     QEMUBH *tx_bh;
     uint32_t tx_waiting;
+    int rx_waiting;
     struct {
         VirtQueueElement *elem;
     } async_tx;
+    t_async_rx_el async_rx_el;
     struct VirtIONet *n;
 } VirtIONetQueue;
 
diff -Naur qemu_vip/include/qemu/bitops.h tainted_qemu/include/qemu/bitops.h
--- qemu_vip/include/qemu/bitops.h	2022-10-20 20:36:12.000000000 +0200
+++ tainted_qemu/include/qemu/bitops.h	2022-10-23 00:22:54.782828685 +0200
@@ -12,12 +12,14 @@
 #ifndef BITOPS_H
 #define BITOPS_H
 
+#include <asm/bitsperlong.h>
 
 #include "host-utils.h"
 #include "atomic.h"
 
 #define BITS_PER_BYTE           CHAR_BIT
-#define BITS_PER_LONG           (sizeof (unsigned long) * BITS_PER_BYTE)
+//#define BITS_PER_LONG           (sizeof (unsigned long) * BITS_PER_BYTE)
+#define BITS_PER_LONG          __BITS_PER_LONG
 
 #define BIT(nr)                 (1UL << (nr))
 #define BIT_ULL(nr)             (1ULL << (nr))
diff -Naur qemu_vip/include/qemu/error-report.h tainted_qemu/include/qemu/error-report.h
--- qemu_vip/include/qemu/error-report.h	2022-10-20 20:36:12.000000000 +0200
+++ tainted_qemu/include/qemu/error-report.h	2022-10-23 00:22:54.782828685 +0200
@@ -13,6 +13,26 @@
 #ifndef QEMU_ERROR_REPORT_H
 #define QEMU_ERROR_REPORT_H
 
+#include <syslog.h>
+#define error_report(format, a...)                    \
+ do {                                                    \
+    printf("\n%s line:%d " format,         \
+    __FUNCTION__,__LINE__, ## a);                \
+    syslog(LOG_ERR, "%s line:%d " format, \
+    __FUNCTION__,__LINE__, ## a);              \
+    exit(-1);                                            \
+    } while (0)
+
+#define warn_report(format, a...)             \
+ do {                                         \
+     printf("\n%s line:%d " format,         \
+      __FUNCTION__,__LINE__, ## a);           \
+     syslog(LOG_ERR, "%s line:%d " format, \
+     __FUNCTION__,__LINE__, ## a);            \
+     } while (0)
+
+
+
 typedef struct Location {
     /* all members are private to qemu-error.c */
     enum { LOC_NONE, LOC_CMDLINE, LOC_FILE } kind;
@@ -37,8 +57,6 @@
 void warn_vreport(const char *fmt, va_list ap) G_GNUC_PRINTF(1, 0);
 void info_vreport(const char *fmt, va_list ap) G_GNUC_PRINTF(1, 0);
 
-void error_report(const char *fmt, ...) G_GNUC_PRINTF(1, 2);
-void warn_report(const char *fmt, ...) G_GNUC_PRINTF(1, 2);
 void info_report(const char *fmt, ...) G_GNUC_PRINTF(1, 2);
 
 bool error_report_once_cond(bool *printed, const char *fmt, ...)
diff -Naur qemu_vip/qemu-options.hx tainted_qemu/qemu-options.hx
--- qemu_vip/qemu-options.hx	2022-10-20 20:36:12.000000000 +0200
+++ tainted_qemu/qemu-options.hx	2022-10-23 00:22:54.786828685 +0200
@@ -2779,6 +2779,7 @@
     "                Use group 'groupname' and mode 'octalmode' to change default\n"
     "                ownership and permissions for communication port.\n"
 #endif
+
 #ifdef CONFIG_NETMAP
     "-netdev netmap,id=str,ifname=name[,devname=nmname]\n"
     "                attach to the existing netmap-enabled network interface 'name', or to a\n"
diff -Naur qemu_vip/util/error.c tainted_qemu/util/error.c
--- qemu_vip/util/error.c	2022-10-20 20:36:12.000000000 +0200
+++ tainted_qemu/util/error.c	2022-10-23 00:22:54.786828685 +0200
@@ -223,10 +223,13 @@
 
 void error_report_err(Error *err)
 {
-    error_report("%s", error_get_pretty(err));
-    if (err->hint) {
+//cloon
+    if (!strstr(err->msg, "Unexpected end-of-file before all data were read"))
+      {
+      error_report("%s", error_get_pretty(err));
+      if (err->hint)
         error_printf("%s", err->hint->str);
-    }
+      }
     error_free(err);
 }
 
diff -Naur qemu_vip/util/error-report.c tainted_qemu/util/error-report.c
--- qemu_vip/util/error-report.c	2022-10-20 20:36:12.000000000 +0200
+++ tainted_qemu/util/error-report.c	2022-10-23 00:22:54.786828685 +0200
@@ -267,14 +267,6 @@
  * Prepend the current location and append a newline.
  * It's wrong to call this in a QMP monitor.  Use error_setg() there.
  */
-void error_report(const char *fmt, ...)
-{
-    va_list ap;
-
-    va_start(ap, fmt);
-    vreport(REPORT_TYPE_ERROR, fmt, ap);
-    va_end(ap);
-}
 
 /*
  * Print a warning message to current monitor if we have one, else to stderr.
@@ -282,14 +274,6 @@
  * single phrase, with no newline or trailing punctuation.
  * Prepend the current location and append a newline.
  */
-void warn_report(const char *fmt, ...)
-{
-    va_list ap;
-
-    va_start(ap, fmt);
-    vreport(REPORT_TYPE_WARNING, fmt, ap);
-    va_end(ap);
-}
 
 /*
  * Print an information message to current monitor if we have one, else to
